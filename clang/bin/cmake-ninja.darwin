#! /bin/sh

# It's assumed that the mono repo is unpacked in the current directory as
# mulle-clang-project. Lets build it in 'build'.
#
# If you are in a docker container or VM or otherwise a fresh install use
# mulle-clang-project/clang/bin/install-prerequisites
#
# MEMO: If you can't use ninja copy this file and make it cmake-make or so.
PREFIX="${PREFIX:-/opt}"
# VERSION / RC are passed in via mulle-clang-cpack
INSTALL_PREFIX="${PREFIX}/mulle-clang-project/${VERSION:-17.0.6.0}${RC}"

[ ! -d build ] && mkdir build
cd build &&
cmake \
   -DLLVM_BUILD_LLVM_DYLIB='ON' \
   -DLLVM_BUILD_TESTS="OFF"  \
   -DLLVM_ENABLE_PROJECTS="clang" \
   -DLLVM_ENABLE_RUNTIMES="libcxxabi;libcxx"  \
   -DLLVM_LINK_LLVM_DYLIB=ON \
   -DLLVM_PARALLEL_LINK_JOBS=4 \
\
   -DCLANG_VENDOR='mulle' \
\
   -DCMAKE_BUILD_TYPE="${CMAKE_BUILD_TYPE:-Release}" \
   -DCMAKE_SHARED_LINKER_FLAGS="-Wl,--reduce-memory-overheads" \
   -DCMAKE_EXE_LINKER_FLAGS="-Wl,--reduce-memory-overheads" \
   -DCMAKE_INSTALL_MESSAGE='LAZY' \
   -DCMAKE_INSTALL_PREFIX="${INSTALL_PREFIX}" \
   -G Ninja \
   ../mulle-clang-project/llvm &&
ninja ${NINJAFLAGS} "$@"  &&
echo "Ninja install with sudo may require a password" >&2 &&
${INSTALL_SUDO} ninja install

# pass in INSTALL_SUDO via env if needed
# postprocess: remove llvm stuff that is not needed
#              rename llvm stuff we need to m


cd "${INSTALL_PREFIX}/bin" &&
for bin in *
do
   case "${bin}" in
      clang-[0-9]*)
         ${INSTALL_SUDO} mv "$bin" "mulle-clang" || exit 1
      ;;

      llvm-nm)
         ${INSTALL_SUDO} mv "$bin" "mulle-nm" || exit 1
      ;;

      analyze-build*|scan-build*)
         ${INSTALL_SUDO} mv "$bin" "mulle-${bin}" || exit 1
      ;;

      mulle-*)
         # protection if overwriting old /opt dir with contents
      ;;

      *)
         echo "Removing ${bin}" >&2 &&
         ${INSTALL_SUDO} rm "${bin}" || exit 1
      ;;
   esac
done &&
(
   #
   # remove more stuff we don't need for the compiler and scanbuild
   # to keep the compiler package down
   #
   ${INSTALL_SUDO} rm "${INSTALL_PREFIX}"/lib/libLLVM*.a
   ${INSTALL_SUDO} rm "${INSTALL_PREFIX}"/lib/libc++*
   ${INSTALL_SUDO} rm "${INSTALL_PREFIX}"/lib/libclang*.a
   ${INSTALL_SUDO} rm "${INSTALL_PREFIX}"/lib/libclang.*
   ${INSTALL_SUDO} rm "${INSTALL_PREFIX}"/lib/libRemarks.so
   ${INSTALL_SUDO} rm "${INSTALL_PREFIX}"/lib/libLTO.so*
   ${INSTALL_SUDO} rm "${INSTALL_PREFIX}"/lib/libRemarks.so*
   ${INSTALL_SUDO} rm -rf "${INSTALL_PREFIX}"/include/
)
